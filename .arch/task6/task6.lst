GAS LISTING task6.S 			page 1


   1              	.Include "my-macro" 		# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏
   1              	// –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
   2              	
   3              	.macro Finish
   4              	    movl $0, %ebx 	# first argument: exit code
   5              	    movl $1, %eax 	# sys_exit index
   6              	    int  $0x80 		# kernel interrupt
   7              	.endm
   8              	
   9              	
  10              	/* 
  11              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
  12              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  13              	 * 	- –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
  14              	 *
  15              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  16              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 exit'
  17              	*/
  18              	.macro Exit ret_val
  19              		movl $1, %eax 		# –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ exit
  20              		movl \ret_val, %ebx 	# –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
  21              		int $0x80 		# –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  22              	.endm
  23              	
  24              	
  25              	/*
  26              	 * –ú–∞—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–∏–
  27              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  28              	 * 	- –∞–¥—Ä–µ—Å –±—É—Ñ—Ñ–µ—Ä–∞ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Å–∏–º–≤–æ–ª–∞
  29              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
  30              	 *	- –≤ %eax –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
  31              	 *	- –ø–æ –∞–¥—Ä–µ—Å—É buf_addr - —Å—á–∏—Ç–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  32              	 * 
  33              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  34              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 read'
  35              	*/
  36              	.macro Getchar buf_addr
  37              		movl $3, %eax		# –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ read
  38              		movl $0, %ebx		# –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
  39              		movl \buf_addr, %ecx	# –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –±—É—Ñ–µ—Ä–∞ (–æ–Ω –∂–µ - —Ñ–∞–∫—Ç–∏—á–µ—Å–∫
  40              		     			# –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞)
  41              		movl $1, %edx		# –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è —á—Ç–µ–Ω–∏—è
  42              		int $0x80		# –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  43              	.endm
  44              	
  45              	/*
  46              	 * –ú–∞—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç–∞–Ω–¥
  47              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  48              	 * 	- –°—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞.
  49              	 *
  50              	 * –ü—Ä–∏–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞:
  51              	 *	Puts "–¢–µ–∫—Å—Ç –≤—ã–≤–æ–¥–∏–º–æ–π —Å—Ç—Ä–æ–∫–∏" 
  52              	 *
  53              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
  54              	 *	- –≤—ã–≤–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ —Å–∏–º–≤–æ–ª—ã –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫
  55              	 *	  –∞ —Ç–∞–∫–∂–µ —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
  56              	 *	
GAS LISTING task6.S 			page 2


  57              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  58              	 * –°–º. —Ç–∞–∫–∂–µ 'man puts', 'man 2 write'
  59              	*/
  60              	.macro Puts string
  61              	.data
  62              	    str\@: 	.ascii "\string"  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è
  63              		
  64              	    strlen\@ = 	. - str\@           # –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏
  65              	
  66              	.text
  67              		movl $4, %eax		# –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  68              		movl $1, %ebx		# –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞	
  69              		movl $str\@, %ecx	# –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏–º–≤–æ
  70              		movl $strlen\@, %edx 	# –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞
  71              		int $0x80		# –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  72              	.endm
  73              	
  74              	
  75              	
  76              	
  77              	
   2              	.include "my-func"		# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞—à–∏–º–∏ –º–∞–∫—Ä–æ—Å–∞–º–∏
   1              	# –ú–∞–∫—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –¥–ª–∏–Ω–Ω—ã —Å—Ç—Ä–æ–∫–∏(—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ %edx). –ö–æ–
   2              	.macro Strlen str
   3              		xorl %edx, %edx		# –û–±–Ω—É–ª—è–µ–º %edx.
   4              	
   5              	strlen_begin\@:
   6              		
   7              		movb \str(%edx), %al	# –ö–æ–ø–∏—Ä—É–µ–º –±–∞–π—Ç —Å—Ç—Ä–æ–∫–∏ –≤ %al.
   8              		cmpb $0, %al		# –°–∏–º–≤–æ–ª –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏?
   9              		je strlen_end\@		# –î–∞, –≤—ã—Ö–æ–¥–∏–º.
  10              		incl %edx		# –ù–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º %edx –Ω–∞ 1 ...
  11              		jmp strlen_begin\@	# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  12              		
  13              	strlen_end\@:	
  14              	.endm
  15              	
  16              	
  17              	# –ú–∞–∫—Ä–æ—Å –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
  18              	.macro Write string
  19              	
  20              		Strlen \string
  21              		movl $4, %eax		# –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  22              		movl $1, %ebx		# –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞	
  23              		movl $\string, %ecx	# –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏–º–≤
  24              	
  25              		int $0x80		# –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  26              	
  27              	.endm
  28              	
  29              	# –ú–∞–∫—Ä–æ—Å –ø–µ—Ä–µ–≤–æ–¥–∞ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º 10. Number - —á–
  30              	.macro ToString Number, String
  31              	
  32              		movl $10, %ebx		# –°–∏—Å—Ç–µ–º–∞ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ù–∞ –Ω–µ—ë –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å
  33              		movl $9, %esi		# –ê–¥—Ä–µ—Å —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —á–∏–ª–∞. –í —á–∏—Å–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±
  34              		movl \Number, %eax	# –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –≤ %ax
  35              		xorl %edi, %edi		# –û–±–Ω—É–ª—è–µ–º %edi
GAS LISTING task6.S 			page 3


  36              	
  37              	ToString_begin\@:		  	# –ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  38              		movl $0, %edx		# –û–±–Ω—É–ª—è–µ–º %edx (–í –Ω—ë–º –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—É–¥–µ—Ç –æ—Å—Ç–∞—
  39              		divl %ebx		# –î–µ–ª–∏–º %ax –Ω–∞ %bx, –æ—Å—Ç–∞—Ç–æ–∫ –≤ %dx
  40              		addb $0x30, %dl		# –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∫ %dl 0x30, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–¥—É —á–∏—Å–
  41              		movb %dl, \String(%esi)	# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ %dl –≤ –±—É—Ñ–µ—Ä –ø–æ –Ω—É–∂–Ω–æ–
  42              	
  43              		cmpl $0, %eax		# –î–æ—à–ª–∏ –¥–æ –Ω—É–ª—è? (–í %ax –ø—É—Å—Ç–æ?)
  44              		je ToString_memcpy\@	# –î–∞, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  45              	
  46              		decl %esi		# –ù–µ—Ç, —É–º–µ–Ω—å—à–∞–µ–º %esi –Ω–∞ 1
  47              		jmp ToString_begin\@	# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  48              	
  49              	ToString_memcpy\@:	
  50              		cmpl  $10, %esi		# –í %esi 10?
  51              		je ToString_end\@	# –î–∞, –≤—ã—Ö–æ–¥–∏–º
  52              		
  53              		movb \String(%esi), %al # –ö–æ–ø–∏—Ä—É–µ–º –±–∞–π—Ç –ø–æ –∞–¥—Ä–µ—Å—É  String(%esi) –≤ %al
  54              		movb $0, \String(%esi)	# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 0 –ø–æ –∞–¥—Ä–µ—Å—É String(%esi)
  55              		movb %al, \String(%edi)	# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ %al –ø–æ –∞–¥—Ä–µ—Å—É String(%edi)
  56              		inc %esi		# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º %esi –Ω–∞ 1
  57              		inc %edi		# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º %edi –Ω–∞ 1
  58              		jmp ToString_memcpy\@	# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  59              	
  60              	ToString_end\@:
  61              		movb $0, \String(%edi)
  62              	.endm
  63              	
   3              	
   4              	
   5              	
   6              	# –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã.–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ %eax
   7              	.macro get_element matr, i, j
   8              		
   9              		movl \i, %ebx			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –≤ %ebx
  10              		
  11              		movl \j, %ecx			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
  12              		movl $24, %eax			# –ò–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ %eax –Ω–∞ 24
  13              		mulw %cx			# –£–º–Ω–æ–∂–∞–µ–º –Ω–∞ %cx
  14              		movw %ax, %cx			# %cx = %ax
  15              		
  16              		movl $\matr, %edx		# –ó–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤ %edx
  17              		addl %ecx, %edx			 
  18              		
  19              		movl (%edx, %ebx, 4), %eax 	# –≠–ª–µ–º–µ–Ω—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ %eax –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—
  20              	.endm 
  21              		
  22              	.data
  23              	
  24 0000 31       	delta:	.byte 0x31
  25              		
  26              	matrix: 
  27 0001 01000000 		.long 1,	 2,	 3,	 4,	 5,	 6
  27      02000000 
  27      03000000 
  27      04000000 
  27      05000000 
GAS LISTING task6.S 			page 4


  28 0019 07000000 		.long 7,	 8, 	 9,	10,	11,	12	
  28      08000000 
  28      09000000 
  28      0A000000 
  28      0B000000 
  29 0031 0D000000 		.long 13,	14,	15,	16,	17,	18
  29      0E000000 
  29      0F000000 
  29      10000000 
  29      11000000 
  30 0049 13000000 		.long 19,	20,	21,	22,	23,	24
  30      14000000 
  30      15000000 
  30      16000000 
  30      17000000 
  31 0061 19000000 		.long 25,	26,	27,	28,	29,	30
  31      1A000000 
  31      1B000000 
  31      1C000000 
  31      1D000000 
  32 0079 1F000000 		.long 31,	32,	33,	34,	35,	36
  32      20000000 
  32      21000000 
  32      22000000 
  32      23000000 
  33              	
  34 0091 00000000 	vector:	.long 0,	0,	0,	0,	0,	0
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              	
  36              	.bss
  37              		.lcomm out, 11		# –¢–æ, —á—Ç–æ –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω
  38              		.lcomm c, 1		# –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  39              		.lcomm k, 4		# –≠–ª–µ–º–µ–Ω—Ç k, –ø–æ–ª—É—á–∞–µ–º—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–û–ú–ï–† –°–
  40              		.lcomm kflag, 4		# –§–ª–∞–≥ —ç–ª–µ–º–µ–Ω—Ç–∞ k
  41              		.lcomm l, 4		# –≠–ª–µ–º–µ–Ω—Ç l, –ø–æ–ª—É—á–∞–µ–º—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–û–ú–ï–† –°–
  42              		.lcomm lflag, 4		# –§–ª–∞–≥ —ç–ª–µ–º–µ–Ω—Ç–∞ l
  43              		.lcomm e, 4		# –¢–µ–∫—É—â–∏–π –≤—ã—á–∏—Å–ª—è–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã
  44              		.lcomm tmp, 4		# 
  45              	.text
  46              	
  47              	.global _start 			# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–æ–π
  48              	
  49              	_start:				# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
  50              		
  51              	input:	
  52              		Puts "–í–≤–µ–¥–∏—Ç–µ 2 —Ü–∏—Ñ—Ä—ã(1-6) –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!\n"
  52              	> .data
  52 00a9 D092D0B2 	>  str0:.ascii "–í–≤–µ–¥–∏—Ç–µ 2 —Ü–∏—Ñ—Ä—ã(1-6) –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!\n"
  52      D0B5D0B4 
  52      D0B8D182 
  52      D0B52032 
  52      20D186D0 
  52              	>  
  52              	>  strlen0 =. - str0
GAS LISTING task6.S 			page 5


  52              	> 
  52              	> .text
  52 0000 B8040000 	>  movl $4,%eax
  52      00
  52 0005 BB010000 	>  movl $1,%ebx
  52      00
  52 000a B9A90000 	>  movl $str0,%ecx
  52      00
  52 000f BA530000 	>  movl $strlen0,%edx
  52      00
  52 0014 CD80     	>  int $0x80
  53 0016 C7051400 		movl $0,l
  53      00000000 
  53      0000
  54              	show_prompt:
  55              		Getchar $c		# –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤ –≤–≤–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–
  55 0020 B8030000 	>  movl $3,%eax
  55      00
  55 0025 BB000000 	>  movl $0,%ebx
  55      00
  55 002a B90B0000 	>  movl $c,%ecx
  55      00
  55              	>  
  55 002f BA010000 	>  movl $1,%edx
  55      00
  55 0034 CD80     	>  int $0x80
  56              		    
  57 0036 83F800   		cmpl $0, %eax		# –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª - EOF (–≤–≤–µ–¥–µ–Ω–æ 0 —Å–∏–º–≤–æ–ª–æ–≤) ? 
  58 0039 0F845D02 		je exit_succesful	# –î–∞ - –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
  58      0000
  59              		
  60 003f 803D0B00 		cmpb $'\n', c 		# —ç—Ç–æ —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ ?
  60      00000A
  61 0046 7427     		je check_input		# –î–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã
  62              		
  63 0048 803D0B00 		cmpb $'6', c		# –ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 6
  63      000036
  64 004f 0F87D500 		ja print_err_msg
  64      0000
  65 0055 803D0B00 		cmpb $'1', c		# –ò –º–µ–Ω—å—à–µ 1
  65      000031
  66 005c 0F82C800 		jb print_err_msg
  66      0000
  67              		
  68 0062 31C0     		xorl %eax, %eax		
  69 0064 A00B0000 		movb c, %al
  69      00
  70 0069 2A050000 		subb delta, %al		# –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –ø–æ–∑–∏—Ü–∏—é –≤ –º–∞—Å—Å–∏–≤–µ
  70      0000
  71              	
  72              	check_input:
  73 006f 833D1000 		cmpl $0, kflag 		# –ï—Å–ª–∏ –≤ k –ø—É—Å—Ç–æ, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—É–¥–∞ —á–∏—Å–ª–æ
  73      000000
  74 0076 741C     		je add_k
  75              		
  76 0078 833D1800 		cmpl $0, lflag		# –ï—Å–ª–∏ –≤ l –ø—É—Å—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á–∏—Å–ª–æ —Ç—É–¥–∞
  76      000000
GAS LISTING task6.S 			page 6


  77 007f 7402     		je add_l
  78              		
  79 0081 EB25     		jmp calc_vector		# –ò–Ω–∞—á–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–∞—Å—á—ë—Ç—É –≤–µ–∫—Ç–æ—Ä–∞
  80              		
  81              	add_l:
  82 0083 A3140000 		movl %eax, l
  82      00
  83 0088 C7051800 		movl $1, lflag
  83      00000100 
  83      0000
  84 0092 EB8C     		jmp show_prompt		# –ù–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Ü–∏—Ñ—Ä—ã
  85              	add_k:
  86 0094 A30C0000 		movl %eax, k
  86      00
  87 0099 C7051000 		movl $1, kflag
  87      00000100 
  87      0000
  88 00a3 E978FFFF 		jmp show_prompt		# –ù–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Ü–∏—Ñ—Ä—ã
  88      FF
  89              		
  90              	calc_vector:
  91 00a8 A11C0000 		movl e, %eax		 	# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
  91      00
  92 00ad C7048591 		movl $0, vector(,%eax,4) 	# –û–±–Ω—É–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–µ–∫—Ç–æ—Ä–∞
  92      00000000 
  92      000000
  93              		
  94              		get_element matrix k, e		# –ü–æ–ª—É—á–∞–µ–º –≤ %eax –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã
  94              	>  
  94 00b8 8B1D0C00 	>  movl k,%ebx
  94      0000
  94              	>  
  94 00be 8B0D1C00 	>  movl e,%ecx
  94      0000
  94 00c4 B8180000 	>  movl $24,%eax
  94      00
  94 00c9 66F7E1   	>  mulw %cx
  94 00cc 6689C1   	>  movw %ax,%cx
  94              	>  
  94 00cf BA010000 	>  movl $matrix,%edx
  94      00
  94 00d4 01CA     	>  addl %ecx,%edx
  94              	>  
  94 00d6 8B049A   	>  movl (%edx,%ebx,4),%eax
  95 00d9 8B1D1C00 		movl e, %ebx			# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç
  95      0000
  96 00df 01049D91 		addl %eax, vector(,%ebx,4) 	# –∏ –ø—Ä–∏–±–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü –∫ —Ç–µ–∫—É—â–µ–º—
  96      000000
  97              	
  98              		get_element matrix, e, l 	# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤–µ—Ä—Ö–Ω–µ–º—É —É—á–∞—Å—Ç–∫—É –∫–æ–¥–∞
  98              	>  
  98 00e6 8B1D1C00 	>  movl e,%ebx
  98      0000
  98              	>  
  98 00ec 8B0D1400 	>  movl l,%ecx
  98      0000
  98 00f2 B8180000 	>  movl $24,%eax
GAS LISTING task6.S 			page 7


  98      00
  98 00f7 66F7E1   	>  mulw %cx
  98 00fa 6689C1   	>  movw %ax,%cx
  98              	>  
  98 00fd BA010000 	>  movl $matrix,%edx
  98      00
  98 0102 01CA     	>  addl %ecx,%edx
  98              	>  
  98 0104 8B049A   	>  movl (%edx,%ebx,4),%eax
  99 0107 8B1D1C00 		movl e, %ebx
  99      0000
 100 010d 01049D91 		addl %eax, vector(,%ebx,4)
 100      000000
 101              		
 102 0114 43       		incl %ebx			# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
 103 0115 891D1C00 		movl %ebx, e
 103      0000
 104              		
 105 011b 83FB06   		cmpl $6, %ebx			# –ï—Å–ª–∏ –≤—ã—á–∏—Å–ª–∏–ª–∏ –Ω–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–µ–∫—Ç–æ—Ä–∞
 106 011e 7588     		jne calc_vector			# –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã—á–∏—Å–ª—è—Ç—å
 107              	
 108 0120 E8340000 		call print_vector		# –í—ã–≤–æ–¥–∏–º –≤–µ–∫—Ç–æ—Ä
 108      00
 109              		
 110 0125 E9D6FEFF 		jmp input			# –ù–∞ –≤–≤–æ–¥
 110      FF
 111              		
 112              	print_err_msg:
 113              		Puts "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥\n"		# –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
 113              	> .data
 113 00fc D09DD0B5 	>  str4:.ascii "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥\n"
 113      D0B2D0B5 
 113      D180D0BD 
 113      D18BD0B9 
 113      20D0B2D0 
 113              	>  
 113              	>  strlen4 =. - str4
 113              	> 
 113              	> .text
 113 012a B8040000 	>  movl $4,%eax
 113      00
 113 012f BB010000 	>  movl $1,%ebx
 113      00
 113 0134 B9FC0000 	>  movl $str4,%ecx
 113      00
 113 0139 BA1A0000 	>  movl $strlen4,%edx
 113      00
 113 013e CD80     	>  int $0x80
 114              	
 115 0140 C7051000 		movl $0, kflag			# –û–±–Ω—É–ª—è–µ–º —Ñ–ª–∞–≥–∏
 115      00000000 
 115      0000
 116 014a C7051800 		movl $0, lflag
 116      00000000 
 116      0000
 117              		
 118 0154 E9A7FEFF 		jmp input 			# –Ω–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞
GAS LISTING task6.S 			page 8


 118      FF
 119              		
 120              		
 121              	print_vector:
 122              		Puts "("
 122              	> .data
 122 0116 28       	>  str5:.ascii "("
 122              	>  
 122              	>  strlen5 =. - str5
 122              	> 
 122              	> .text
 122 0159 B8040000 	>  movl $4,%eax
 122      00
 122 015e BB010000 	>  movl $1,%ebx
 122      00
 122 0163 B9160100 	>  movl $str5,%ecx
 122      00
 122 0168 BA010000 	>  movl $strlen5,%edx
 122      00
 122 016d CD80     	>  int $0x80
 123              	
 124 016f C7052000 		movl $-4, tmp			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ tmp -4, —á—Ç–æ –±—ã –ø—Ä–∏ –ø—Ä–∏–±–∞–ª–µ–Ω–∏–∏ –≤ –Ω–∞—
 124      0000FCFF 
 124      FFFF
 125              		
 126              	print_begin:
 127              	
 128 0179 8B0D2000 		movl tmp, %ecx			# –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—à–ª–æ–µ —Å–º–µ—â–µ–Ω–∏–µ
 128      0000
 129 017f 83C104   		addl $4, %ecx			# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
 130 0182 890D2000 		movl %ecx, tmp
 130      0000
 131              		
 132              		ToString vector(%ecx), out 	# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –ø–æ –∞–¥—Ä–µ—Å—É vector+%ecx –≤ —
 132              	> 
 132 0188 BB0A0000 	>  movl $10,%ebx
 132      00
 132 018d BE090000 	>  movl $9,%esi
 132      00
 132 0192 8B819100 	>  movl vector(%ecx),%eax
 132      0000
 132 0198 31FF     	>  xorl %edi,%edi
 132              	> 
 132              	> ToString_begin6:
 132 019a BA000000 	>  movl $0,%edx
 132      00
 132 019f F7F3     	>  divl %ebx
 132 01a1 80C230   	>  addb $0x30,%dl
 132 01a4 88960000 	>  movb %dl,out(%esi)
 132      0000
 132              	> 
 132 01aa 83F800   	>  cmpl $0,%eax
 132 01ad 7403     	>  je ToString_memcpy6
 132              	> 
 132 01af 4E       	>  decl %esi
 132 01b0 EBE8     	>  jmp ToString_begin6
 132              	> 
GAS LISTING task6.S 			page 9


 132              	> ToString_memcpy6:
 132 01b2 83FE0A   	>  cmpl $10,%esi
 132 01b5 7417     	>  je ToString_end6
 132              	>  
 132 01b7 8A860000 	>  movb out(%esi),%al
 132      0000
 132 01bd C6860000 	>  movb $0,out(%esi)
 132      000000
 132 01c4 88870000 	>  movb %al,out(%edi)
 132      0000
 132 01ca 46       	>  inc %esi
 132 01cb 47       	>  inc %edi
 132 01cc EBE4     	>  jmp ToString_memcpy6
 132              	> 
 132              	> ToString_end6:
 132 01ce C6870000 	>  movb $0,out(%edi)
 132      000000
 133              		Write out		     	# –ò –≤—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ç–Ω—ã–π –≤—ã–≤–æ–¥
 133              	> 
 133              	>  Strlen out
 133 01d5 31D2     	>>  xorl %edx,%edx
 133              	>> 
 133              	>> strlen_begin8:
 133              	>>  
 133 01d7 8A820000 	>>  movb out(%edx),%al
 133      0000
 133 01dd 3C00     	>>  cmpb $0,%al
 133 01df 7403     	>>  je strlen_end8
 133 01e1 42       	>>  incl %edx
 133 01e2 EBF3     	>>  jmp strlen_begin8
 133              	>>  
 133              	>> strlen_end8:
 133 01e4 B8040000 	>  movl $4,%eax
 133      00
 133 01e9 BB010000 	>  movl $1,%ebx
 133      00
 133 01ee B9000000 	>  movl $out,%ecx
 133      00
 133              	> 
 133 01f3 CD80     	>  int $0x80
 133              	> 
 134              		Puts "; "
 134              	> .data
 134 0117 3B20     	>  str9:.ascii "; "
 134              	>  
 134              	>  strlen9 =. - str9
 134              	> 
 134              	> .text
 134 01f5 B8040000 	>  movl $4,%eax
 134      00
 134 01fa BB010000 	>  movl $1,%ebx
 134      00
 134 01ff B9170100 	>  movl $str9,%ecx
 134      00
 134 0204 BA020000 	>  movl $strlen9,%edx
 134      00
 134 0209 CD80     	>  int $0x80
GAS LISTING task6.S 			page 10


 135              	
 136 020b 833D2000 		cmpl $16, tmp			# –ï—Å–ª–∏ –Ω–µ –±—ã–ª–∏ –≤—ã–≤–µ–¥–µ–Ω—ã 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 136      000010
 137 0212 0F8561FF 		jne print_begin			# —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–≤–æ–¥–∏—Ç—å
 137      FFFF
 138              		
 139              		ToString vector+20, out 	# –ò–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º 6 –∏ –≤—ã—Ö–æ–¥–∏–º
 139              	> 
 139 0218 BB0A0000 	>  movl $10,%ebx
 139      00
 139 021d BE090000 	>  movl $9,%esi
 139      00
 139 0222 A1A50000 	>  movl vector+20,%eax
 139      00
 139 0227 31FF     	>  xorl %edi,%edi
 139              	> 
 139              	> ToString_begin10:
 139 0229 BA000000 	>  movl $0,%edx
 139      00
 139 022e F7F3     	>  divl %ebx
 139 0230 80C230   	>  addb $0x30,%dl
 139 0233 88960000 	>  movb %dl,out(%esi)
 139      0000
 139              	> 
 139 0239 83F800   	>  cmpl $0,%eax
 139 023c 7403     	>  je ToString_memcpy10
 139              	> 
 139 023e 4E       	>  decl %esi
 139 023f EBE8     	>  jmp ToString_begin10
 139              	> 
 139              	> ToString_memcpy10:
 139 0241 83FE0A   	>  cmpl $10,%esi
 139 0244 7417     	>  je ToString_end10
 139              	>  
 139 0246 8A860000 	>  movb out(%esi),%al
 139      0000
 139 024c C6860000 	>  movb $0,out(%esi)
 139      000000
 139 0253 88870000 	>  movb %al,out(%edi)
 139      0000
 139 0259 46       	>  inc %esi
 139 025a 47       	>  inc %edi
 139 025b EBE4     	>  jmp ToString_memcpy10
 139              	> 
 139              	> ToString_end10:
 139 025d C6870000 	>  movb $0,out(%edi)
 139      000000
 140              	        Write out
 140              	> 
 140              	>  Strlen out
 140 0264 31D2     	>>  xorl %edx,%edx
 140              	>> 
 140              	>> strlen_begin12:
 140              	>>  
 140 0266 8A820000 	>>  movb out(%edx),%al
 140      0000
 140 026c 3C00     	>>  cmpb $0,%al
GAS LISTING task6.S 			page 11


 140 026e 7403     	>>  je strlen_end12
 140 0270 42       	>>  incl %edx
 140 0271 EBF3     	>>  jmp strlen_begin12
 140              	>>  
 140              	>> strlen_end12:
 140 0273 B8040000 	>  movl $4,%eax
 140      00
 140 0278 BB010000 	>  movl $1,%ebx
 140      00
 140 027d B9000000 	>  movl $out,%ecx
 140      00
 140              	> 
 140 0282 CD80     	>  int $0x80
 140              	> 
 141              	        Puts ")\n"
 141              	> .data
 141 0119 290A     	>  str13:.ascii ")\n"
 141              	>  
 141              	>  strlen13 =. - str13
 141              	> 
 141              	> .text
 141 0284 B8040000 	>  movl $4,%eax
 141      00
 141 0289 BB010000 	>  movl $1,%ebx
 141      00
 141 028e B9190100 	>  movl $str13,%ecx
 141      00
 141 0293 BA020000 	>  movl $strlen13,%edx
 141      00
 141 0298 CD80     	>  int $0x80
 142              	
 143              	print_end:
 144              	
 145              	/*	movl $0, e			# –æ–±–Ω—É–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏ 
 146              		movl $0, kflag			# —Ñ–ª–∞–≥–∏
 147              		movl $0, lflag
 148              		ret*/
 149 029a EB05     		jmp stop
 150              		
 151              	exit_succesful:
 152 029c E8B8FEFF 		call print_vector		# –í—ã–≤–æ–¥–∏–º –≤–µ–∫—Ç–æ—Ä
 152      FF
 153              		
 154              	stop:
 155              		Exit $0 			# –í—ã—Ö–æ–¥
 155 02a1 B8010000 	>  movl $1,%eax
 155      00
 155 02a6 BB000000 	>  movl $0,%ebx
 155      00
 155 02ab CD80     	>  int $0x80
 156              	
 157              	.end
GAS LISTING task6.S 			page 12


DEFINED SYMBOLS
             task6.S:24     .data:0000000000000000 delta
             task6.S:26     .data:0000000000000001 matrix
             task6.S:34     .data:0000000000000091 vector
             task6.S:37     .bss:0000000000000000 out
             task6.S:37     .bss:000000000000000b c
             task6.S:39     .bss:000000000000000c k
             task6.S:40     .bss:0000000000000010 kflag
             task6.S:41     .bss:0000000000000014 l
             task6.S:42     .bss:0000000000000018 lflag
             task6.S:43     .bss:000000000000001c e
             task6.S:44     .bss:0000000000000020 tmp
             task6.S:49     .text:0000000000000000 _start
             task6.S:51     .text:0000000000000000 input
             task6.S:52     .data:00000000000000a9 str0
             task6.S:52     *ABS*:0000000000000053 strlen0
             task6.S:54     .text:0000000000000020 show_prompt
             task6.S:151    .text:000000000000029c exit_succesful
             task6.S:72     .text:000000000000006f check_input
             task6.S:112    .text:000000000000012a print_err_msg
             task6.S:85     .text:0000000000000094 add_k
             task6.S:81     .text:0000000000000083 add_l
             task6.S:90     .text:00000000000000a8 calc_vector
             task6.S:121    .text:0000000000000159 print_vector
             task6.S:113    .data:00000000000000fc str4
             task6.S:113    *ABS*:000000000000001a strlen4
             task6.S:122    .data:0000000000000116 str5
             task6.S:122    *ABS*:0000000000000001 strlen5
             task6.S:126    .text:0000000000000179 print_begin
             task6.S:132    .text:000000000000019a ToString_begin6
             task6.S:132    .text:00000000000001b2 ToString_memcpy6
             task6.S:132    .text:00000000000001ce ToString_end6
             task6.S:133    .text:00000000000001d7 strlen_begin8
             task6.S:133    .text:00000000000001e4 strlen_end8
             task6.S:134    .data:0000000000000117 str9
             task6.S:134    *ABS*:0000000000000002 strlen9
             task6.S:139    .text:0000000000000229 ToString_begin10
             task6.S:139    .text:0000000000000241 ToString_memcpy10
             task6.S:139    .text:000000000000025d ToString_end10
             task6.S:140    .text:0000000000000266 strlen_begin12
             task6.S:140    .text:0000000000000273 strlen_end12
             task6.S:141    .data:0000000000000119 str13
             task6.S:141    *ABS*:0000000000000002 strlen13
             task6.S:143    .text:000000000000029a print_end
             task6.S:154    .text:00000000000002a1 stop

NO UNDEFINED SYMBOLS
