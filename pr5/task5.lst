GAS LISTING task5.S 			page 1


   1              	.include "my-macro" 		# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –º–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏
   1              	/*
   2              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
   3              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
   4              	 *     - –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
   5              	 *
   6              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
   7              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 exit'
   8              	*/
   9              	.macro Exit ret_val
  10              	    movl $1, %eax         # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ exit
  11              	    movl \ret_val, %ebx     # –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
  12              	    int $0x80         # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  13              	.endm
  14              	
  15              	
  16              	/*
  17              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –±–∞–π—Ç–∞ –∫–æ–¥–∞ —Å
  18              	 * —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
  19              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  20              	 *     - –∞–¥—Ä–µ—Å –±—É—Ñ–µ—Ä–∞ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –±–∞–π—Ç–∞
  21              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
  22              	 *    - –≤ %eax –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –±–∞–π—Ç–æ–≤
  23              	 *    - –ø–æ –∞–¥—Ä–µ—Å—É buf_addr - —Å—á–∏—Ç–∞–Ω–Ω—ã–π –±–∞–π—Ç
  24              	 *
  25              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  26              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 read'
  27              	*/
  28              	.macro Getchar buf_addr
  29              	    movl $3, %eax        # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ read
  30              	    movl $0, %ebx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ
  31              	    movl \buf_addr, %ecx    # –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –±—É—Ñ–µ—Ä–∞ (–æ–Ω –∂–µ - —Ñ–∞–∫—Ç–∏—á
  32              	                     # –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞)
  33              	    movl $1, %edx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è —á—Ç–µ–Ω–∏—
  34              	    int $0x80        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  35              	.endm
  36              	
  37              	/*
  38              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è  –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª —Å—Ç–∞–Ω–¥–∞—Ä—Ç–
  39              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  40              	 *     - –°—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞.
  41              	 *
  42              	 * –ü—Ä–∏–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞:
  43              	 *    Puts "–¢–µ–∫—Å—Ç –≤—ã–≤–æ–¥–∏–º–æ–π —Å—Ç—Ä–æ–∫–∏"
  44              	 *
  45              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
  46              	 *    - –≤—ã–≤–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ —Å–∏–º–≤–æ–ª—ã –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–
  47              	 *      –∏ –≤—Å–ª–µ–¥ –∑–∞ –Ω–∏–º–∏ —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ \n
  48              	 *
  49              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  50              	 * –°–º. —Ç–∞–∫–∂–µ 'man puts', 'man 2 write'
  51              	*/
  52              	.macro Puts string
  53              	.data
  54              	    str\@:     .ascii "\string"  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–
  55              	
  56              	    strlen\@ =     . - str\@           # –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–
GAS LISTING task5.S 			page 2


  57              	
  58              	.text
  59              	    movl $4, %eax        # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  60              	    movl $1, %ebx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤
  61              	    movl $str\@, %ecx    # –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏
  62              	    movl $strlen\@, %edx     # –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è –≤—ã–≤–
  63              	    int $0x80        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  64              	.endm
   2              	.include "my-func"		# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞—à–∏–º–∏ –º–∞–∫—Ä–æ—Å–∞–º–∏
   1              	# –ú–∞–∫—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –¥–ª–∏–Ω–Ω—ã —Å—Ç—Ä–æ–∫–∏(—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ %edx). –ö–æ–
   2              	.macro Strlen str
   3              		xorl %edx, %edx		# –û–±–Ω—É–ª—è–µ–º %edx.
   4              	
   5              	strlen_begin\@:
   6              		
   7              		movb \str(%edx), %al	# –ö–æ–ø–∏—Ä—É–µ–º –±–∞–π—Ç —Å—Ç—Ä–æ–∫–∏ –≤ %al.
   8              		cmpb $0, %al		# –°–∏–º–≤–æ–ª –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏?
   9              		je strlen_end\@		# –î–∞, –≤—ã—Ö–æ–¥–∏–º.
  10              		incl %edx		# –ù–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º %edx –Ω–∞ 1 ...
  11              		jmp strlen_begin\@	# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  12              		
  13              	strlen_end\@:	
  14              	.endm
  15              	
  16              	
  17              	# –ú–∞–∫—Ä–æ—Å –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
  18              	.macro Write string
  19              	
  20              		Strlen \string
  21              		movl $4, %eax		# –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  22              		movl $1, %ebx		# –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞	
  23              		movl $\string, %ecx	# –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏–º–≤
  24              	
  25              		int $0x80		# –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  26              	
  27              	.endm
  28              	
  29              	# –ú–∞–∫—Ä–æ—Å –ø–µ—Ä–µ–≤–æ–¥–∞ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º 10. Number - —á–
  30              	.macro ToString Number, String
  31              	
  32              		movl $10, %ebx		# –°–∏—Å—Ç–µ–º–∞ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ù–∞ –Ω–µ—ë –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å
  33              		movl $9, %esi		# –ê–¥—Ä–µ—Å —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —á–∏–ª–∞. –í —á–∏—Å–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±
  34              		movl \Number, %eax	# –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –≤ %ax
  35              		xorl %edi, %edi		# –û–±–Ω—É–ª—è–µ–º %edi
  36              	
  37              	ToString_begin\@:		  	# –ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  38              		movl $0, %edx		# –û–±–Ω—É–ª—è–µ–º %edx (–í –Ω—ë–º –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±—É–¥–µ—Ç –æ—Å—Ç–∞—
  39              		divl %ebx		# –î–µ–ª–∏–º %ax –Ω–∞ %bx, –æ—Å—Ç–∞—Ç–æ–∫ –≤ %dx
  40              		addb $0x30, %dl		# –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∫ %dl 0x30, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–¥—É —á–∏—Å–
  41              		movb %dl, \String(%esi)	# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ %dl –≤ –±—É—Ñ–µ—Ä –ø–æ –Ω—É–∂–Ω–æ–
  42              	
  43              		cmpl $0, %eax		# –î–æ—à–ª–∏ –¥–æ –Ω—É–ª—è? (–í %ax –ø—É—Å—Ç–æ?)
  44              		je ToString_memcpy\@	# –î–∞, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  45              	
  46              		decl %esi		# –ù–µ—Ç, —É–º–µ–Ω—å—à–∞–µ–º %esi –Ω–∞ 1
  47              		jmp ToString_begin\@	# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  48              	
GAS LISTING task5.S 			page 3


  49              	ToString_memcpy\@:	
  50              		cmpl  $10, %esi		# –í %esi 10?
  51              		je ToString_end\@	# –î–∞, –≤—ã—Ö–æ–¥–∏–º
  52              		
  53              		movb \String(%esi), %al # –ö–æ–ø–∏—Ä—É–µ–º –±–∞–π—Ç –ø–æ –∞–¥—Ä–µ—Å—É  String(%esi) –≤ %al
  54              		movb $0, \String(%esi)	# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 0 –ø–æ –∞–¥—Ä–µ—Å—É String(%esi)
  55              		movb %al, \String(%edi)	# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ %al –ø–æ –∞–¥—Ä–µ—Å—É String(%edi)
  56              		inc %esi		# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º %esi –Ω–∞ 1
  57              		inc %edi		# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º %edi –Ω–∞ 1
  58              		jmp ToString_memcpy\@	# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞
  59              	
  60              	ToString_end\@:
  61              		movb $0, \String(%edi)
  62              	.endm
  63              	
   3              	
   4              	
   5              	
   6              	# –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã.–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ %eax
   7              	.macro get_element matr, i, j
   8              		
   9              		movl \i, %ebx			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –≤ %ebx
  10              		
  11              		movl \j, %ecx			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
  12              		movl $24, %eax			# –ò–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ %eax –Ω–∞ 24
  13              		mulw %cx			# –£–º–Ω–æ–∂–∞–µ–º –Ω–∞ %cx
  14              		movw %ax, %cx
  15              		
  16              		movl $\matr, %edx		# –ó–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã i —Å—Ç–æ–ª–±—Ü–∞ 1-–æ–π —Å—Ç
  17              		addl %ecx, %edx			# –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã
  18              		
  19              		movl (%edx, %ebx, 4), %eax 	# –≠–ª–µ–º–µ–Ω—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ %eax –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—
  20              	.endm 
  21              		
  22              	.data
  23              	
  24 0000 31       	delta:	.byte 0x31
  25              		
  26              	matrix: 
  27 0001 01000000 		.long 1,	 2,	 3,	 4,	 5,	 6
  27      02000000 
  27      03000000 
  27      04000000 
  27      05000000 
  28 0019 07000000 		.long 7,	 8, 	 9,	10,	11,	12	
  28      08000000 
  28      09000000 
  28      0A000000 
  28      0B000000 
  29 0031 0D000000 		.long 13,	14,	15,	16,	17,	18
  29      0E000000 
  29      0F000000 
  29      10000000 
  29      11000000 
  30 0049 13000000 		.long 19,	20,	21,	22,	23,	24
  30      14000000 
  30      15000000 
GAS LISTING task5.S 			page 4


  30      16000000 
  30      17000000 
  31 0061 19000000 		.long 25,	26,	27,	28,	29,	30
  31      1A000000 
  31      1B000000 
  31      1C000000 
  31      1D000000 
  32 0079 1F000000 		.long 31,	32,	33,	34,	35,	36
  32      20000000 
  32      21000000 
  32      22000000 
  32      23000000 
  33              	
  34 0091 00000000 	vector:	.long 0,	0,	0,	0,	0,	0
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              	
  36              	.bss
  37              		.lcomm out, 11		# –¢–æ, —á—Ç–æ –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω
  38              		.lcomm c, 1		# –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  39              		.lcomm k, 4		# –≠–ª–µ–º–µ–Ω—Ç k, –ø–æ–ª—É—á–∞–µ–º—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–û–ú–ï–† –°–
  40              		.lcomm kflag, 4		# –§–ª–∞–≥ —ç–ª–µ–º–µ–Ω—Ç–∞ k
  41              		.lcomm l, 4		# –≠–ª–µ–º–µ–Ω—Ç l, –ø–æ–ª—É—á–∞–µ–º—ã–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ù–û–ú–ï–† –°–
  42              		.lcomm lflag, 4		# –§–ª–∞–≥ —ç–ª–µ–º–µ–Ω—Ç–∞ l
  43              		.lcomm e, 4		# –¢–µ–∫—É—â–∏–π –≤—ã—á–∏—Å–ª—è–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã
  44              		.lcomm tmp, 4		# 
  45              	.text
  46              	
  47              	.global _start 			# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–æ–π
  48              	
  49              	_start:				# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
  50              		
  51              	input:	
  52              		Puts "–í–≤–µ–¥–∏—Ç–µ 2 —Ü–∏—Ñ—Ä—ã(1-6)\n" # 
  52              	> .data
  52 00a9 D092D0B2 	>  str0:.ascii "–í–≤–µ–¥–∏—Ç–µ 2 —Ü–∏—Ñ—Ä—ã(1-6)\n"
  52      D0B5D0B4 
  52      D0B8D182 
  52      D0B52032 
  52      20D186D0 
  52              	> 
  52              	>  strlen0 =. - str0
  52              	> 
  52              	> .text
  52 0000 B8040000 	>  movl $4,%eax
  52      00
  52 0005 BB010000 	>  movl $1,%ebx
  52      00
  52 000a B9A90000 	>  movl $str0,%ecx
  52      00
  52 000f BA210000 	>  movl $strlen0,%edx
  52      00
  52 0014 CD80     	>  int $0x80
  53 0016 C7051400 		movl $0,l
  53      00000000 
GAS LISTING task5.S 			page 5


  53      0000
  54              	show_prompt:
  55              		Getchar $c		# –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤ –≤–≤–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–
  55 0020 B8030000 	>  movl $3,%eax
  55      00
  55 0025 BB000000 	>  movl $0,%ebx
  55      00
  55 002a B90B0000 	>  movl $c,%ecx
  55      00
  55              	>  
  55 002f BA010000 	>  movl $1,%edx
  55      00
  55 0034 CD80     	>  int $0x80
  56              		    
  57 0036 83F800   		cmpl $0, %eax		# –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª - EOF (–≤–≤–µ–¥–µ–Ω–æ 0 —Å–∏–º–≤–æ–ª–æ–≤) ? 
  58 0039 0F845502 		je exit_succesful	# –î–∞ - –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
  58      0000
  59              		
  60 003f 803D0B00 		cmpb $'\n', c 		# —ç—Ç–æ —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ ?
  60      00000A
  61 0046 7427     		je check_input		# –î–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã
  62              		
  63 0048 803D0B00 		cmpb $'6', c		# –ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 6
  63      000036
  64 004f 0F87CD00 		ja print_err_msg
  64      0000
  65 0055 803D0B00 		cmpb $'1', c		# –ò –º–µ–Ω—å—à–µ 1
  65      000031
  66 005c 0F82C000 		jb print_err_msg
  66      0000
  67              		
  68 0062 31C0     		xorl %eax, %eax		
  69 0064 A00B0000 		movb c, %al
  69      00
  70 0069 2A050000 		subb delta, %al		# –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –ø–æ–∑–∏—Ü–∏—é –≤ –º–∞—Å—Å–∏–≤–µ
  70      0000
  71              	
  72              	check_input:
  73 006f 833D1800 		cmpl $0, lflag		# –ï—Å–ª–∏ –≤ l –ø—É—Å—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á–∏—Å–ª–æ —Ç—É–¥–∞
  73      000000
  74 0076 741C     		je add_l
  75              		
  76 0078 833D1000 		cmpl $0, kflag 		# –ï—Å–ª–∏ –≤ k –ø—É—Å—Ç–æ, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—É–¥–∞ —á–∏—Å–ª–æ
  76      000000
  77 007f 7402     		je add_k
  78              		
  79 0081 EB25     		jmp calc_vector		# –ò–Ω–∞—á–µ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–∞—Å—á—ë—Ç—É –≤–µ–∫—Ç–æ—Ä–∞
  80              	
  81              	add_k:
  82 0083 A30C0000 		movl %eax, k
  82      00
  83 0088 C7051000 		movl $1, kflag
  83      00000100 
  83      0000
  84 0092 EB8C     		jmp show_prompt		# –ù–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Ü–∏—Ñ—Ä—ã
  85              		
  86              	add_l:
GAS LISTING task5.S 			page 6


  87 0094 A3140000 		movl %eax, l
  87      00
  88 0099 C7051800 		movl $1, lflag
  88      00000100 
  88      0000
  89 00a3 E978FFFF 		jmp show_prompt		# –ù–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Ü–∏—Ñ—Ä—ã
  89      FF
  90              		
  91              	calc_vector:
  92 00a8 A11C0000 		movl e, %eax		 	# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
  92      00
  93 00ad C7048591 		movl $0, vector(,%eax,4) 	# –û–±–Ω—É–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–µ–∫—Ç–æ—Ä–∞
  93      00000000 
  93      000000
  94              		
  95              		get_element matrix k, e		# –ü–æ–ª—É—á–∞–µ–º –≤ %eax –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã
  95              	>  
  95 00b8 8B1D0C00 	>  movl k,%ebx
  95      0000
  95              	>  
  95 00be 8B0D1C00 	>  movl e,%ecx
  95      0000
  95 00c4 B8180000 	>  movl $24,%eax
  95      00
  95 00c9 66F7E1   	>  mulw %cx
  95 00cc 6689C1   	>  movw %ax,%cx
  95              	>  
  95 00cf BA010000 	>  movl $matrix,%edx
  95      00
  95 00d4 01CA     	>  addl %ecx,%edx
  95              	>  
  95 00d6 8B049A   	>  movl (%edx,%ebx,4),%eax
  96 00d9 8B1D1C00 		movl e, %ebx			# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç
  96      0000
  97 00df 01049D91 		addl %eax, vector(,%ebx,4) 	# –∏ –ø—Ä–∏–±–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü –∫ —Ç–µ–∫—É—â–µ–º—
  97      000000
  98              	
  99              		get_element matrix, e, l 	# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤–µ—Ä—Ö–Ω–µ–º—É —É—á–∞—Å—Ç–∫—É –∫–æ–¥–∞
  99              	>  
  99 00e6 8B1D1C00 	>  movl e,%ebx
  99      0000
  99              	>  
  99 00ec 8B0D1400 	>  movl l,%ecx
  99      0000
  99 00f2 B8180000 	>  movl $24,%eax
  99      00
  99 00f7 66F7E1   	>  mulw %cx
  99 00fa 6689C1   	>  movw %ax,%cx
  99              	>  
  99 00fd BA010000 	>  movl $matrix,%edx
  99      00
  99 0102 01CA     	>  addl %ecx,%edx
  99              	>  
  99 0104 8B049A   	>  movl (%edx,%ebx,4),%eax
 100 0107 8B1D1C00 		movl e, %ebx
 100      0000
 101 010d 01049D91 		addl %eax, vector(,%ebx,4)
GAS LISTING task5.S 			page 7


 101      000000
 102              		
 103 0114 43       		incl %ebx			# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
 104 0115 891D1C00 		movl %ebx, e
 104      0000
 105              		
 106 011b 83FB06   		cmpl $6, %ebx			# –ï—Å–ª–∏ –≤—ã—á–∏—Å–ª–∏–ª–∏ –Ω–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–µ–∫—Ç–æ—Ä–∞
 107 011e 7588     		jne calc_vector			# –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã—á–∏—Å–ª—è—Ç—å
 108              	
 109 0120 EB2F     		jmp print_vector		# –í—ã–≤–æ–¥–∏–º –≤–µ–∫—Ç–æ—Ä
 110              		
 111              	print_err_msg:
 112              		Puts "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥\n"		# –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
 112              	> .data
 112 00ca D09DD0B5 	>  str4:.ascii "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥\n"
 112      D0B2D0B5 
 112      D180D0BD 
 112      D18BD0B9 
 112      20D0B2D0 
 112              	> 
 112              	>  strlen4 =. - str4
 112              	> 
 112              	> .text
 112 0122 B8040000 	>  movl $4,%eax
 112      00
 112 0127 BB010000 	>  movl $1,%ebx
 112      00
 112 012c B9CA0000 	>  movl $str4,%ecx
 112      00
 112 0131 BA1A0000 	>  movl $strlen4,%edx
 112      00
 112 0136 CD80     	>  int $0x80
 113              	
 114 0138 C7051000 		movl $0, kflag			# –û–±–Ω—É–ª—è–µ–º —Ñ–ª–∞–≥–∏
 114      00000000 
 114      0000
 115 0142 C7051800 		movl $0, lflag
 115      00000000 
 115      0000
 116              		
 117 014c E9AFFEFF 		jmp input 			# –Ω–∞ –≤–≤–æ–¥ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞
 117      FF
 118              		
 119              		
 120              	print_vector:
 121              		Puts "("
 121              	> .data
 121 00e4 28       	>  str5:.ascii "("
 121              	> 
 121              	>  strlen5 =. - str5
 121              	> 
 121              	> .text
 121 0151 B8040000 	>  movl $4,%eax
 121      00
 121 0156 BB010000 	>  movl $1,%ebx
 121      00
 121 015b B9E40000 	>  movl $str5,%ecx
GAS LISTING task5.S 			page 8


 121      00
 121 0160 BA010000 	>  movl $strlen5,%edx
 121      00
 121 0165 CD80     	>  int $0x80
 122              	
 123 0167 C7052000 		movl $-4, tmp			# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ tmp -4, —á—Ç–æ –±—ã –ø—Ä–∏ –ø—Ä–∏–±–∞–ª–µ–Ω–∏–∏ –≤ –Ω–∞—
 123      0000FCFF 
 123      FFFF
 124              		
 125              	print_begin:
 126              	
 127 0171 8B0D2000 		movl tmp, %ecx			# –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—à–ª–æ–µ —Å–º–µ—â–µ–Ω–∏–µ
 127      0000
 128 0177 83C104   		addl $4, %ecx			# –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
 129 017a 890D2000 		movl %ecx, tmp
 129      0000
 130              		
 131              		ToString vector(%ecx), out 	# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –ø–æ –∞–¥—Ä–µ—Å—É vector+%ecx –≤ —
 131              	> 
 131 0180 BB0A0000 	>  movl $10,%ebx
 131      00
 131 0185 BE090000 	>  movl $9,%esi
 131      00
 131 018a 8B819100 	>  movl vector(%ecx),%eax
 131      0000
 131 0190 31FF     	>  xorl %edi,%edi
 131              	> 
 131              	> ToString_begin6:
 131 0192 BA000000 	>  movl $0,%edx
 131      00
 131 0197 F7F3     	>  divl %ebx
 131 0199 80C230   	>  addb $0x30,%dl
 131 019c 88960000 	>  movb %dl,out(%esi)
 131      0000
 131              	> 
 131 01a2 83F800   	>  cmpl $0,%eax
 131 01a5 7403     	>  je ToString_memcpy6
 131              	> 
 131 01a7 4E       	>  decl %esi
 131 01a8 EBE8     	>  jmp ToString_begin6
 131              	> 
 131              	> ToString_memcpy6:
 131 01aa 83FE0A   	>  cmpl $10,%esi
 131 01ad 7417     	>  je ToString_end6
 131              	>  
 131 01af 8A860000 	>  movb out(%esi),%al
 131      0000
 131 01b5 C6860000 	>  movb $0,out(%esi)
 131      000000
 131 01bc 88870000 	>  movb %al,out(%edi)
 131      0000
 131 01c2 46       	>  inc %esi
 131 01c3 47       	>  inc %edi
 131 01c4 EBE4     	>  jmp ToString_memcpy6
 131              	> 
 131              	> ToString_end6:
 131 01c6 C6870000 	>  movb $0,out(%edi)
GAS LISTING task5.S 			page 9


 131      000000
 132              		Write out		     	# –ò –≤—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ç–Ω—ã–π –≤—ã–≤–æ–¥
 132              	> 
 132              	>  Strlen out
 132 01cd 31D2     	>>  xorl %edx,%edx
 132              	>> 
 132              	>> strlen_begin8:
 132              	>>  
 132 01cf 8A820000 	>>  movb out(%edx),%al
 132      0000
 132 01d5 3C00     	>>  cmpb $0,%al
 132 01d7 7403     	>>  je strlen_end8
 132 01d9 42       	>>  incl %edx
 132 01da EBF3     	>>  jmp strlen_begin8
 132              	>>  
 132              	>> strlen_end8:
 132 01dc B8040000 	>  movl $4,%eax
 132      00
 132 01e1 BB010000 	>  movl $1,%ebx
 132      00
 132 01e6 B9000000 	>  movl $out,%ecx
 132      00
 132              	> 
 132 01eb CD80     	>  int $0x80
 132              	> 
 133              		Puts "; "
 133              	> .data
 133 00e5 3B20     	>  str9:.ascii "; "
 133              	> 
 133              	>  strlen9 =. - str9
 133              	> 
 133              	> .text
 133 01ed B8040000 	>  movl $4,%eax
 133      00
 133 01f2 BB010000 	>  movl $1,%ebx
 133      00
 133 01f7 B9E50000 	>  movl $str9,%ecx
 133      00
 133 01fc BA020000 	>  movl $strlen9,%edx
 133      00
 133 0201 CD80     	>  int $0x80
 134              	
 135 0203 833D2000 		cmpl $16, tmp			# –ï—Å–ª–∏ –Ω–µ –±—ã–ª–∏ –≤—ã–≤–µ–¥–µ–Ω—ã 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 135      000010
 136 020a 0F8561FF 		jne print_begin			# —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–≤–æ–¥–∏—Ç—å
 136      FFFF
 137              		
 138              		ToString vector+20, out 	# –ò–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º 6 –∏ –≤—ã—Ö–æ–¥–∏–º
 138              	> 
 138 0210 BB0A0000 	>  movl $10,%ebx
 138      00
 138 0215 BE090000 	>  movl $9,%esi
 138      00
 138 021a A1A50000 	>  movl vector+20,%eax
 138      00
 138 021f 31FF     	>  xorl %edi,%edi
 138              	> 
GAS LISTING task5.S 			page 10


 138              	> ToString_begin10:
 138 0221 BA000000 	>  movl $0,%edx
 138      00
 138 0226 F7F3     	>  divl %ebx
 138 0228 80C230   	>  addb $0x30,%dl
 138 022b 88960000 	>  movb %dl,out(%esi)
 138      0000
 138              	> 
 138 0231 83F800   	>  cmpl $0,%eax
 138 0234 7403     	>  je ToString_memcpy10
 138              	> 
 138 0236 4E       	>  decl %esi
 138 0237 EBE8     	>  jmp ToString_begin10
 138              	> 
 138              	> ToString_memcpy10:
 138 0239 83FE0A   	>  cmpl $10,%esi
 138 023c 7417     	>  je ToString_end10
 138              	>  
 138 023e 8A860000 	>  movb out(%esi),%al
 138      0000
 138 0244 C6860000 	>  movb $0,out(%esi)
 138      000000
 138 024b 88870000 	>  movb %al,out(%edi)
 138      0000
 138 0251 46       	>  inc %esi
 138 0252 47       	>  inc %edi
 138 0253 EBE4     	>  jmp ToString_memcpy10
 138              	> 
 138              	> ToString_end10:
 138 0255 C6870000 	>  movb $0,out(%edi)
 138      000000
 139              	        Write out
 139              	> 
 139              	>  Strlen out
 139 025c 31D2     	>>  xorl %edx,%edx
 139              	>> 
 139              	>> strlen_begin12:
 139              	>>  
 139 025e 8A820000 	>>  movb out(%edx),%al
 139      0000
 139 0264 3C00     	>>  cmpb $0,%al
 139 0266 7403     	>>  je strlen_end12
 139 0268 42       	>>  incl %edx
 139 0269 EBF3     	>>  jmp strlen_begin12
 139              	>>  
 139              	>> strlen_end12:
 139 026b B8040000 	>  movl $4,%eax
 139      00
 139 0270 BB010000 	>  movl $1,%ebx
 139      00
 139 0275 B9000000 	>  movl $out,%ecx
 139      00
 139              	> 
 139 027a CD80     	>  int $0x80
 139              	> 
 140              	        Puts ")\n"
 140              	> .data
GAS LISTING task5.S 			page 11


 140 00e7 290A     	>  str13:.ascii ")\n"
 140              	> 
 140              	>  strlen13 =. - str13
 140              	> 
 140              	> .text
 140 027c B8040000 	>  movl $4,%eax
 140      00
 140 0281 BB010000 	>  movl $1,%ebx
 140      00
 140 0286 B9E70000 	>  movl $str13,%ecx
 140      00
 140 028b BA020000 	>  movl $strlen13,%edx
 140      00
 140 0290 CD80     	>  int $0x80
 141              	
 142 0292 EB07     		jmp stop
 143              	
 144              	exit_succesful:
 145 0294 E9B8FEFF 		jmp print_vector		# –í—ã–≤–æ–¥–∏–º –≤–µ–∫—Ç–æ—Ä	
 145      FF
 146              		
 147              	print_end:
 148 0299 EB00     		jmp stop
 149              			
 150              	stop:
 151              		Exit $0 			# –í—ã—Ö–æ–¥
 151 029b B8010000 	>  movl $1,%eax
 151      00
 151 02a0 BB000000 	>  movl $0,%ebx
 151      00
 151 02a5 CD80     	>  int $0x80
 152              	
 153              	.end
GAS LISTING task5.S 			page 12


DEFINED SYMBOLS
             task5.S:24     .data:0000000000000000 delta
             task5.S:26     .data:0000000000000001 matrix
             task5.S:34     .data:0000000000000091 vector
             task5.S:37     .bss:0000000000000000 out
             task5.S:37     .bss:000000000000000b c
             task5.S:39     .bss:000000000000000c k
             task5.S:40     .bss:0000000000000010 kflag
             task5.S:41     .bss:0000000000000014 l
             task5.S:42     .bss:0000000000000018 lflag
             task5.S:43     .bss:000000000000001c e
             task5.S:44     .bss:0000000000000020 tmp
             task5.S:49     .text:0000000000000000 _start
             task5.S:51     .text:0000000000000000 input
             task5.S:52     .data:00000000000000a9 str0
             task5.S:52     *ABS*:0000000000000021 strlen0
             task5.S:54     .text:0000000000000020 show_prompt
             task5.S:144    .text:0000000000000294 exit_succesful
             task5.S:72     .text:000000000000006f check_input
             task5.S:111    .text:0000000000000122 print_err_msg
             task5.S:86     .text:0000000000000094 add_l
             task5.S:81     .text:0000000000000083 add_k
             task5.S:91     .text:00000000000000a8 calc_vector
             task5.S:120    .text:0000000000000151 print_vector
             task5.S:112    .data:00000000000000ca str4
             task5.S:112    *ABS*:000000000000001a strlen4
             task5.S:121    .data:00000000000000e4 str5
             task5.S:121    *ABS*:0000000000000001 strlen5
             task5.S:125    .text:0000000000000171 print_begin
             task5.S:131    .text:0000000000000192 ToString_begin6
             task5.S:131    .text:00000000000001aa ToString_memcpy6
             task5.S:131    .text:00000000000001c6 ToString_end6
             task5.S:132    .text:00000000000001cf strlen_begin8
             task5.S:132    .text:00000000000001dc strlen_end8
             task5.S:133    .data:00000000000000e5 str9
             task5.S:133    *ABS*:0000000000000002 strlen9
             task5.S:138    .text:0000000000000221 ToString_begin10
             task5.S:138    .text:0000000000000239 ToString_memcpy10
             task5.S:138    .text:0000000000000255 ToString_end10
             task5.S:139    .text:000000000000025e strlen_begin12
             task5.S:139    .text:000000000000026b strlen_end12
             task5.S:140    .data:00000000000000e7 str13
             task5.S:140    *ABS*:0000000000000002 strlen13
             task5.S:150    .text:000000000000029b stop
             task5.S:147    .text:0000000000000299 print_end

NO UNDEFINED SYMBOLS
