/*
 * Программа ввода кодов цифровых символов в буфер в ОП
 */

.include "my-macro"

.bss
    .lcomm buf, 100 # 100 байтовый буфер для кодов прочитанных символов
    .lcomm c, 1    # однобайтовый буфер для чтения байта из файла stdin

.text
.global _start

_start:
    sub    %esi, %esi     # указатель адреса байта в буфере buf (индексный регистр)

show_prompt:
    Puts "Вводите цифру, друг мой!"     # макровызов вывода строки в
                    # файл stdout (подсказка ввода)

kbd_input:
    Getchar $c          # макровызов ввода байта из stdin в
            # промежуточный буфер c

    cmpl $0, %eax     # наступило событие EOF (конец файла stdin) ?
    je stop        # Да - на завершение программы

    cmpb $'\n', c     # это символ перевода строки ?
    je eax_input      # ДА - записываем последний символ в eax
    cmpb $'9', c      # код больше кода символа '9' ?
    ja print_err_msg    # ДА - на вывод сообщения об ошибке
    cmpb $'0', c    # код меньше кода символа '0' ?
    jb print_err_msg    # ДА - на вывод сообщения об ошибке
	
    movb c, %al         # передать код символа цифры из c в al

    cmpl $100, %esi	# сравниваем esi с 100
    je print_end_buffer	# Если верно то вывод ошибки о заполнении буфера
	
    movb %al, buf(%esi) # передать код символа цифры из al в байт
            # буфера по адресу &buf + esi
    incl %esi        # указать на следующий байт буфера для
            # следующего кода

    Puts "Цифра! Хорошо." # сообщения об успехе вводе

    jmp show_prompt    # на ввод следующего символа2

print_err_msg:
    Puts "Не цифровая клавиша. Повторите ввод"    # вывод сообщения об ошибке
    jmp show_prompt     # на ввод следующего символа

eax_input:
    movl %esi,%ebx 	# Копируем %esi в %ebx
    decl %ebx		# Уменьшаем %ebx на 1
    cmpl $0, %ebx 	# Сравниваем %ebx с 0
    jl kbd_input 	# < - переход к началу программы для ввода следующего символа
    movb buf(%ebx), %al	# Копируем ячейку buf + %ebx в %al
    subb $48, %al	# Отнимаем 48 для получения числового значения
    jmp kbd_input	# Переход к началу программы

print_end_buffer:
    Puts "Буффер переполнен" # Вывод сообщения об ошибке
    jmp stop		# выход из программы	


stop:
    Exit $0

.end
